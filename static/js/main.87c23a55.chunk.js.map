{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","translateX","slideRight","props","itemWidth","images","frameSize","imagesWithoutFrame","length","ourStep","step","setState","slideLeft","this","animationDuration","className","type","classNames","disabled","onClick","style","width","transitionDuration","transform","map","image","index","src","alt","React","Component","App","handleChange","event","target","name","value","current","htmlFor","id","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87c23a55.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\ntype State = {\n  translateX: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    translateX: 0,\n  };\n\n  slideRight = () => {\n    const { itemWidth, images, frameSize } = this.props;\n    const { translateX } = this.state;\n    const imagesWithoutFrame = images.length - frameSize;\n    const ourStep = this.props.step * itemWidth;\n\n    if (itemWidth * imagesWithoutFrame + translateX === 0) {\n      return;\n    }\n\n    if (itemWidth * imagesWithoutFrame + translateX < ourStep) {\n      this.setState((state) => (\n        {\n          translateX: state.translateX - (\n            itemWidth * imagesWithoutFrame + translateX),\n        }\n      ));\n\n      return;\n    }\n\n    this.setState((state) => (\n      {\n        translateX: state.translateX - ourStep,\n      }\n    ));\n  };\n\n  slideLeft = () => {\n    const { itemWidth } = this.props;\n    const { translateX } = this.state;\n    const ourStep = this.props.step * itemWidth;\n\n    if (translateX === 0) {\n      return;\n    }\n\n    if (translateX + ourStep > 0) {\n      this.setState((state) => (\n        {\n          translateX: state.translateX - translateX,\n        }\n      ));\n\n      return;\n    }\n\n    this.setState((state) => (\n      {\n        translateX: state.translateX + ourStep,\n      }\n    ));\n  };\n\n  render() {\n    const { translateX } = this.state;\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n    const imagesWithoutFrame = images.length - frameSize;\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button left',\n            {\n              disabled: translateX === 0,\n            },\n          )}\n          onClick={this.slideLeft}\n        >\n          <div />\n        </button>\n        <div className=\"Carousel__wrapper\" style={{ width: `${frameSize * 130}px` }}>\n          <ul className=\"Carousel__list\" style={{ transitionDuration: `${animationDuration}ms`, transform: `translateX(${translateX}px)` }}>\n            {images.map((image, index) => (\n              <li><img src={image} alt={`${index + 1}`} style={{ width: `${itemWidth}px` }} /></li>\n            ))}\n          </ul>\n        </div>\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className={classNames(\n            'button right',\n            {\n              disabled: (itemWidth * imagesWithoutFrame + translateX) === 0,\n            },\n          )}\n          onClick={this.slideRight}\n        >\n          <div />\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(current => ({\n      ...current,\n      [name]: +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form>\n          <label htmlFor=\"stepInputId\">\n            Step:\n          </label>\n          <input\n            id=\"stepInputId\"\n            type=\"text\"\n            name=\"step\"\n            value={this.state.step}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"frameSizeInputId\">\n            Frame size:\n          </label>\n          <input\n            id=\"frameSizeInputId\"\n            type=\"text\"\n            name=\"frameSize\"\n            value={this.state.frameSize}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"itemWidthInputId\">\n            Input width:\n          </label>\n          <input\n            id=\"itemWidthInputId\"\n            type=\"text\"\n            name=\"itemWidth\"\n            value={this.state.itemWidth}\n            onChange={this.handleChange}\n          />\n\n          <label htmlFor=\"animationDurationInputId\">\n            Animation duration:\n          </label>\n          <input\n            id=\"animationDurationInputId\"\n            type=\"text\"\n            name=\"animationDuration\"\n            value={this.state.animationDuration}\n            onChange={this.handleChange}\n          />\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}